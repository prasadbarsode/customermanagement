{"version":3,"sources":["G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/$_lazy_route_resource lazy","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app-routing.module.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.module.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/cust-info-base.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/custmgmt-routing.module.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/custmgmt.module.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/datepicker-info.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dropdown-info.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/textbox-info.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.css","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.html","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/model/customer-type.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/custdetails.service.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/edit-cust-control.service.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/validaterules.service.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/environments/environment.ts","G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/custmgmt/custmgmt.module\": [\n\t\t\"../../../../../src/app/custmgmt/custmgmt.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    loadChildren: 'app/custmgmt/custmgmt.module#CustmgmtModule'\n  }];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\n\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\nimport { CustmgmtModule } from './custmgmt/custmgmt.module';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CustdetailsService } from './services/custdetails.service';\n\nimport { HttpModule } from '@angular/http';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { ValidaterulesService } from './services/validaterules.service';\nimport { EditCustControlService } from './services/edit-cust-control.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([]),\n    NgbModule.forRoot(),\n    CustmgmtModule,\n  ],\n  providers: [\n    CustdetailsService,\n    ValidaterulesService,\n    EditCustControlService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/app.module.ts","export class CustInfoBase<T> {\n  value: T;\n  key: string;\n  label: string;\n  required: boolean;\n  order: number;\n  controlType: string;\n\n  constructor(options: {\n      value?: T,\n      key?: string,\n      label?: string,\n      required?: boolean,\n      order?: number,\n      controlType?: string\n    } = {}) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.required = !!options.required;\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/cust-info-base.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewcustdetailsComponent } from './viewcustdetails/viewcustdetails.component';\nimport { EditcustomerdetailsComponent } from './editcustomerdetails/editcustomerdetails.component';\nimport { DynamiccusteditComponent } from './dynamiccustedit/dynamiccustedit.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: ViewcustdetailsComponent,  \n  },\n  {\n        path: 'editcustomerdetails/:id',\n        //component: EditcustomerdetailsComponent, \n        component: DynamiccusteditComponent,        \n  } \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustmgmtRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/custmgmt-routing.module.ts","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\n\nimport { CustmgmtRoutingModule } from './custmgmt-routing.module';\nimport { ViewcustdetailsComponent } from './viewcustdetails/viewcustdetails.component';\nimport { EditcustomerdetailsComponent } from './editcustomerdetails/editcustomerdetails.component';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { DynamiccusteditComponent } from './dynamiccustedit/dynamiccustedit.component';\nimport { GenEditFormGroupComponent } from './gen-edit-form-group/gen-edit-form-group.component';\nimport { PopulateCustInfoFieldsComponent } from './populate-cust-info-fields/populate-cust-info-fields.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    CustmgmtRoutingModule\n  ],\n  declarations: [ViewcustdetailsComponent, \n    EditcustomerdetailsComponent, \n    DynamiccusteditComponent, \n    GenEditFormGroupComponent, \n    PopulateCustInfoFieldsComponent],\n  schemas: [\n    NO_ERRORS_SCHEMA,\n    CUSTOM_ELEMENTS_SCHEMA\n  ], \n  exports: [\n    ViewcustdetailsComponent, \n    EditcustomerdetailsComponent, \n    DynamiccusteditComponent, \n    GenEditFormGroupComponent, \n    PopulateCustInfoFieldsComponent\n  ] \n})\nexport class CustmgmtModule { }\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/custmgmt.module.ts","import { CustInfoBase } from './cust-info-base';\n\nexport class DatepickerInfo extends CustInfoBase<string> {\n  controlType = 'datepicker';\n  type: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.type = options['type'] || '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/datepicker-info.ts","import { CustInfoBase } from './cust-info-base';\n\nexport class DropdownInfo extends CustInfoBase<string> {\n  controlType = 'dropdown';\n  options: {key: string, value: string}[] = [];\n  custCountrySetValue: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.options = options['options'] || [];\n    //this.custCountrySetValue = options['type'] || [];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dropdown-info.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.css\n// module id = ../../../../../src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n  <h2 class=\\\"page-header\\\">Edit existing customer details</h2>\\n  \\n      <app-gen-edit-form-group [custInfoToBeEdited]=\\\"custInfoToBeEdited\\\" *ngIf=\\\"custInfoToBeEdited.length > 0\\\">\\n\\n        </app-gen-edit-form-group>\\n  \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.html\n// module id = ../../../../../src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CustdetailsService } from '../../services/custdetails.service';\n\n@Component({\n  selector: 'app-dynamiccustedit',\n  templateUrl: './dynamiccustedit.component.html',\n  styleUrls: ['./dynamiccustedit.component.css'],\n  providers:  [CustdetailsService],\n})\nexport class DynamiccusteditComponent implements OnInit {\n  custInfoToBeEdited: any[];\n  customerDataRes : any = {};\n  contractExpDateDisplayFormat: any;\n  selectedDate: any;\n\n  constructor(\n    private custdetailsService: CustdetailsService,\n  ) {\n    this.custInfoToBeEdited = this.custdetailsService.getCustInfoBase();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/dynamiccustedit/dynamiccustedit.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n  .ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n\\r\\n  .input-group ul{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .input-group ul li{\\r\\n    list-style-type: none;\\r\\n    display: inline-block;\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n\\r\\n  .custom-select {\\r\\n    padding: 0;\\r\\n    width: auto;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.css\n// module id = ../../../../../src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n<h2 class=\\\"page-header\\\">Edit existing customer details</h2>\\n\\n  <form (submit)=\\\"onEditCustomerSubmit(customerDataRes._id)\\\" #customerForm=\\\"ngForm\\\">\\n    <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-sm-10\\\">\\n      <label>Customer Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"customerDataRes.name\\\" name=\\\"customerName\\\" #customerName=ngModel minlength=\\\"2\\\" class=\\\"form-control\\\" required>\\n\\n    <div *ngIf=\\\"customerName.invalid && (customerName.dirty || customerName.touched)\\\"\\n    class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"customerName.errors.required\\\">\\n          Name is required.\\n    </div>\\n    <div *ngIf=\\\"customerName.errors.minlength\\\">\\n      Name must be at least 2 characters long.\\n    </div>\\n    </div>\\n    </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-sm-10\\\">\\n        <label for=\\\"country\\\">Customer Country</label>\\n        <select class=\\\"form-control\\\" id=\\\"customerCountry\\\" [(ngModel)]=\\\"customerDataRes.country\\\" name=\\\"customerCountry\\\" required>\\n          <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country\\\">{{country}}</option>\\n        </select>\\n    </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n    <div class=\\\"form-group col-sm-10\\\">\\n        <label>Number Of Employees</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"customerDataRes.numberOfEmployees\\\" name=\\\"numberOfEmployees\\\" #numberOfEmployees=ngModel min=\\\"1\\\" class=\\\"form-control\\\" required>\\n  \\n      <div *ngIf=\\\"numberOfEmployees.invalid && (numberOfEmployees.dirty || numberOfEmployees.touched)\\\"\\n      class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"numberOfEmployees.errors.required\\\">\\n            Number of employees is required field.\\n      </div>\\n      <!-- <div *ngIf=\\\"numberOfEmployees.errors.min\\\">\\n        Name must be at least 2 characters long.\\n      </div> -->\\n      </div>\\n  \\n      </div>\\n    </div>  \\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-sm-10\\\">\\n          <label>Website Url</label>\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"customerDataRes.websiteUrl\\\" name=\\\"websiteUrl\\\" #websiteUrl=ngModel class=\\\"form-control\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-10\\\">\\n\\n      <div class=\\\"form-group\\\">\\n          <label>Contract Expiry Date</label>\\n          <pre>{{ contractExpDateDisplayFormat | date:'dd/MM/yyyy HH:mm'}}</pre>\\n\\n        <div class=\\\"input-group date\\\" id='datetimepicker1'>\\n            <input class=\\\"form-control\\\" placeholder=\\\"dd-MM-yyyy\\\" name=\\\"contractExpiryDate\\\" [(ngModel)]=\\\"selectedDate\\\"  ngbDatepicker #d1=\\\"ngbDatepicker\\\">\\n            <div class=\\\"input-group-addon\\\" (click)=\\\"d1.toggle()\\\" >\\n              <!-- <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i> -->\\n            <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n        </div>\\n      </div>\\n      </div>\\n\\n      </div>\\n      </div>\\n      \\n      \\n\\n      <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-sm-10\\\" *ngIf=\\\"customerDataRes.type==2\\\">\\n          <label>Annual Turnover</label>\\n          <input type=\\\"number\\\" [(ngModel)]=\\\"customerDataRes.annualTurnover\\\" name=\\\"annualTurnover\\\" #annualTurnover=ngModel class=\\\"form-control\\\" required>\\n          {{ customerDataRes.annualTurnover | currency : 'EUR' }}\\n        <div *ngIf=\\\"annualTurnover.invalid && (annualTurnover.dirty || annualTurnover.touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"annualTurnover.errors.required\\\">\\n            Annual Turnover is required field.\\n        </div>\\n        </div>\\n        </div>\\n        </div>\\n\\n      \\n        <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-10\\\" *ngIf=\\\"customerDataRes.type==2\\\">\\n          <label>Compliance Checked</label>\\n        <div class=\\\"input-group\\\">\\n          <ul>\\n            <li>\\n                <label class=\\\"form-check-inline\\\">\\n                    <input type=\\\"radio\\\" [(ngModel)]=\\\"customerDataRes.complianceChecked\\\" name=\\\"complianceChecked\\\" [value]=\\\"true\\\" #complianceChecked=ngModel> Yes\\n                </label>\\n            </li>\\n            <li>\\n                <label>\\n                    <input type=\\\"radio\\\" [(ngModel)]=\\\"customerDataRes.complianceChecked\\\" name=\\\"complianceChecked\\\" [value]=\\\"false\\\"> No\\n                </label>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n      \\n\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" [disabled]=\\\"!customerForm.form.valid\\\">\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.html\n// module id = ../../../../../src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustdetailsService } from '../../services/custdetails.service';\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport {NgbDatepicker, NgbDateAdapter,\n  NgbDateStruct, NgbDateParserFormatter, NgbDatepickerConfig,\n  NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-editcustomerdetails',\n  templateUrl: './editcustomerdetails.component.html',\n  styleUrls: ['./editcustomerdetails.component.css']\n})\nexport class EditcustomerdetailsComponent implements OnInit {\n  editCustInfoform: FormGroup;\n\n  customerDataRes : any = {};\n  contractExpDateDisplayFormat: any;\n  model2: Date;\n\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  currentDate: any;\n  //selectedDate: NgbDateStruct;\n  selectedDate: any;\n\n  countries = ['Denmark', 'Sweden', 'Norway'];\n\n  constructor(private custdetailsService: CustdetailsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private calendar: NgbCalendar,\n    private config: NgbDatepickerConfig) {\n      this.getSelectedCustomerDetail(this.route.snapshot.params.id);\n      this.currentDate = new Date();\n      config.minDate = {year:this.currentDate.getFullYear(), \n        month: this.currentDate.getMonth() + 1,\n        day: this.currentDate.getDate()};\n       \n      config.maxDate = {year:this.currentDate.getFullYear() + 3, \n          month: this.currentDate.getMonth() + 1,\n          day: this.currentDate.getDate()};\n    }\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  createForm(){\n\n  }\n\n  //Make service call to fetch details of selected customer\n  getSelectedCustomerDetail(id){\n    this.custdetailsService.getSelectedCustomerInfo(id).subscribe(data => {\n      \n      this.customerDataRes = data;\n      \n      //get UTC date in correct format as it has extra space in test data\n      this.customerDataRes.contractExpiryDate = this.convertUTCtoDateformat(this.customerDataRes.contractExpiryDate);\n      this.selectedDate = this.customerDataRes.contractExpiryDate;\n      console.log(\"Assigned date:\", this.selectedDate);\n    })\n  }\n\n  convertUTCtoDateformat(contractExpiryDate){\n    //Convert UTC date format to standard date\n    this.contractExpDateDisplayFormat = contractExpiryDate.split(\" \");\n      \n    if(this.contractExpDateDisplayFormat.length > 1){\n      contractExpiryDate = this.contractExpDateDisplayFormat[0] + this.contractExpDateDisplayFormat[1]\n      //console.log(\"contractExpDateDisplayFormat:\", contractExpiryDate);\n    }\n    \n    this.contractExpDateDisplayFormat = new Date(contractExpiryDate);\n    return this.contractExpDateDisplayFormat;\n  }\n\n  onEditCustomerSubmit(id){\n    console.log(\"inside edit customer\");\n    //var event = new Date('05 October 2011 14:48 UTC');\n    //console.log(event.toISOString());\n\n    let revisedDate = new Date(this.selectedDate.year, this.selectedDate.month, this.selectedDate.day);\n    console.log(revisedDate.toISOString());\n    let localTime = revisedDate.getTime();\n\n    // obtain local UTC offset and convert to msec\n    let localOffset = revisedDate.getTimezoneOffset() * 60000;\n    let offset = 5.5;   \n    \n    // obtain UTC time in msec\n    let utc = localTime + localOffset;  \n\n    let bombay = utc + (3600000*offset);\n\n    let nd = new Date(bombay); \n    //document.writeln(\"Bombay time is \" + nd.toLocaleString() + \"<br>\");\n    console.log(nd.toLocaleString());\n\n    const revisedCustomerDetail = {\n      _id: this.customerDataRes._id,\n      id: this.customerDataRes.id,\n      type: this.customerDataRes.type,\n      name: this.customerDataRes.name,\n      country: this.customerDataRes.country,\n      websiteUrl: this.customerDataRes.websiteUrl,\n      numberOfEmployees: this.customerDataRes.numberOfEmployees,\n      contractExpiryDate: revisedDate.toISOString(),\n      annualTurnover: this.customerDataRes.annualTurnover,\n      complianceChecked: this.customerDataRes.complianceChecked\n    }\n    \n    console.log('revisedCustomerDetail:' + revisedCustomerDetail.contractExpiryDate);\n\n    // Required Fields\n    //  if(!this.validateService.validateAirlineDetails(this.revisedCustomerDetail)){\n    //   console.log(\"Please feel in all fields to complete addition of new airline\");\n    //   return false;\n    // }\n\n    //Navigate back to default view in case of success\n    //this.router.navigate(['/']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/editcustomerdetails/editcustomerdetails.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.css\n// module id = ../../../../../src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.css\n// module chunks = main","module.exports = \"<div>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\" *ngIf=\\\"form\\\">\\n\\n    <div *ngFor=\\\"let custInfo of custInfoToBeEdited\\\" class=\\\"form-row\\\">\\n      <app-populate-cust-info-fields [custInfo]=\\\"custInfo\\\" [form]=\\\"form\\\"></app-populate-cust-info-fields>\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\n    </div>\\n  </form>\\n\\n  <div *ngIf=\\\"payLoad\\\" class=\\\"form-row alert alert-success\\\">\\n    <strong>Saved updated customer details</strong><br>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.html\n// module id = ../../../../../src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\n\nimport { CustomerType } from '../../model/customer-type';\nimport { CustInfoBase } from '../cust-info-base';\nimport { EditCustControlService } from '../../services/edit-cust-control.service';\nimport { CustdetailsService } from '../../services/custdetails.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ValidaterulesService } from '../../services/validaterules.service';\n\n@Component({\n  selector: 'app-gen-edit-form-group',\n  templateUrl: './gen-edit-form-group.component.html',\n  styleUrls: ['./gen-edit-form-group.component.css'],\n  providers: [EditCustControlService],\n})\nexport class GenEditFormGroupComponent implements OnInit, OnDestroy{\n\n  @Input() custInfoToBeEdited: CustInfoBase<any>[] = [];\n  form: FormGroup;\n  payLoad = '';\n  custId;\n  contractExpDateDisplayFormat: any;\n  customerType;\n  europeTimeZoneOffset;\n  complianceChecked: boolean;\n\n  @Input() customerDataRes : any = {};\n  editedCustomerData: {};\n  custType = new CustomerType();\n\n  constructor(\n    private custdetailsService: CustdetailsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private editCustControlService: EditCustControlService,\n    private validaterulesService: ValidaterulesService\n  ) {\n    this.custId = this.route.snapshot.params.id;\n  }\n\n  ngOnInit() {\n      this.createForm();\n  }\n\n  onSubmit() {\n    //Get revised contract expiry date as per EU offset format\n    let contractExp = this.validaterulesService.getContractExpiryDateinUTCFomrt(this.form.controls['contractExpiryDate'].value,this.europeTimeZoneOffset);\n    \n    if(this.customerDataRes.type==this.custType.bigCustomerType){\n      //Set compliance checked status in boolean format\n      if(this.form.controls['complianceChecked'].value == \"true\"){\n        this.complianceChecked = true;\n      }else if(this.form.controls['complianceChecked'].value == \"false\"\n      || this.form.controls['complianceChecked'].value == null\n      || this.form.controls['complianceChecked'].value == \"\"){\n        this.complianceChecked = false;\n    \n      }\n\n        //Request body object with updated customer details\n        const editedCustomerData = {\n        _id: this.customerDataRes._id,  \n        id: this.customerDataRes.id,\n        type: this.customerDataRes.type,\n        name: this.form.controls['name'].value,\n        country: this.form.controls['country'].value,\n        websiteUrl: this.form.controls['websiteUrl'].value,\n        numberOfEmployees: parseInt(this.form.controls['numberOfEmployees'].value),\n        contractExpiryDate: contractExp,\n        annualTurnover: parseInt(this.form.controls['annualTurnover'].value),\n        complianceChecked: this.complianceChecked\n      };\n      \n      // Update existing big customer details\n      this.custdetailsService.updateCustomerDetail(editedCustomerData).subscribe(data => {\n      if(data.success){\n            alert(\"Details updated successfully\");\n            setTimeout(()=>{\n                this.router.navigate(['/']);\n            },1000);\n            this.payLoad = JSON.stringify(this.form.value);\n        }else{\n          alert(\"Details could not be updated. Please try again\");\n        }    \n      });\n    }else if(this.customerDataRes.type==this.custType.smallCustomerType){\n      const editedCustomerData = {\n        _id: this.customerDataRes._id,  \n        id: this.customerDataRes.id,\n        type: this.customerDataRes.type,\n        name: this.form.controls['name'].value,\n        country: this.form.controls['country'].value,\n        websiteUrl: this.form.controls['websiteUrl'].value,\n        numberOfEmployees: parseInt(this.form.controls['numberOfEmployees'].value),\n        contractExpiryDate: contractExp,\n      };\n      \n      // Update existing small customer details through service call\n      this.custdetailsService.updateCustomerDetail(editedCustomerData).subscribe(data => {\n        if(data.success){\n            alert(\"Details updated successfully\");\n            setTimeout(()=>{\n              this.router.navigate(['/']);\n            },1000);\n            this.payLoad = JSON.stringify(this.form.value);\n          }else{\n            alert(\"Details could not be updated. Please try again\");\n          }   \n        });\n    }\n  }\n\n  createForm(){\n  \n    this.custdetailsService.getSelectedCustomerInfo(this.custId).subscribe(data => {\n      //Receive data from backend\n      this.customerDataRes = data;\n      \n      //get UTC date in correct format as it has extra space in test data\n      this.customerDataRes.contractExpiryDate = this.validaterulesService.convertUTCtoDateformat(this.customerDataRes.contractExpiryDate);\n      \n      //Annual turnover and Compliance checked not required in case of small customers\n      if (this.customerDataRes.type==1){\n        this.custInfoToBeEdited = this.custInfoToBeEdited.filter((custInfoToBeEdited)=>{\n          return custInfoToBeEdited.key!='annualTurnover' && custInfoToBeEdited.key!='complianceChecked'\n        });\n      }\n\n      //Populate FormGroup\n      this.form = this.editCustControlService.toFormGroup(this.custInfoToBeEdited, this.customerDataRes);\n      \n      //Set display date in yyyy-MM-dd as it is only accepted format in ng-Bootstrap\n      this.form.value.contractExpiryDate = new Date(this.form.value.contractExpiryDate);\n      \n      this.form.controls['contractExpiryDate'].setValue({\n        year: parseInt(this.form.value.contractExpiryDate.getFullYear()),\n        month: parseInt(this.form.value.contractExpiryDate.getMonth() + 1),\n        day: parseInt(this.form.value.contractExpiryDate.getDate()),\n        hour: parseInt(this.form.value.contractExpiryDate.getHours()),\n        minute: parseInt(this.form.value.contractExpiryDate.getMinutes()),\n        seconds: parseInt(this.form.value.contractExpiryDate.getSeconds()),\n      });\n\n      //Add customer type as hidden field as it is not displayed on screen\n      //It is used to differentiate between max date for small and big customers\n      this.form.addControl('customerType', new FormControl('', Validators.required));\n      this.form.controls['customerType'].setValue(this.customerDataRes.type);\n    }); \n\n  }\n\n  ngOnDestroy(){\n    this.custdetailsService.getSelectedCustomerInfo(this.custId).subscribe().unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/gen-edit-form-group/gen-edit-form-group.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n  .ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n\\r\\n  .input-group ul{\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .input-group ul li{\\r\\n    list-style-type: none;\\r\\n    display: inline-block;\\r\\n    margin-left: 10px;\\r\\n  }\\r\\n\\r\\n  .custom-select {\\r\\n    padding: 0;\\r\\n    width: auto;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.css\n// module id = ../../../../../src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.css\n// module chunks = main","module.exports = \"<div>\\n  <form [formGroup]=\\\"form\\\">\\n    <label [attr.for]=\\\"custInfo.key\\\">{{custInfo.label}}</label>\\n  \\n    <div [ngSwitch]=\\\"custInfo.controlType\\\" class=\\\"row\\\">\\n  \\n    <div class=\\\"form-group col-sm-10\\\">  \\n      <input *ngSwitchCase=\\\"'textbox'\\\" [formControlName]=\\\"custInfo.key\\\"\\n              [id]=\\\"custInfo.key\\\" [type]=\\\"custInfo.type\\\" class=\\\"form-control col-sm-10\\\">\\n  \\n      <select [id]=\\\"custInfo.key\\\" *ngSwitchCase=\\\"'dropdown'\\\" [formControlName]=\\\"custInfo.key\\\" class=\\\"form-control col-sm-10\\\">\\n        <option *ngFor=\\\"let opt of custInfo.options\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n      </select>\\n\\n      <div *ngSwitchCase=\\\"'datepicker'\\\" class=\\\"input-group date\\\" id='datetimepicker1'>\\n        <input [formControlName]=\\\"custInfo.key\\\"\\n              [id]=\\\"custInfo.key\\\" [type]=\\\"custInfo.type\\\" readonly\\n              class=\\\"form-control col-sm-10\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\">\\n          <div class=\\\"input-group-addon\\\" (click)=\\\"d1.toggle()\\\">\\n                <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n          </div> \\n      </div>\\n      \\n    </div> \\n    </div> \\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"alert alert-danger col-sm-10\\\" *ngIf=\\\"!isValid\\\">{{custInfo.label}} is required in valid format</div>\\n    </div>\\n    \\n  </form>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.html\n// module id = ../../../../../src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.html\n// module chunks = main","import { Component, Input, OnInit, ChangeDetectionStrategy  } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\n\nimport { CustInfoBase }     from '../cust-info-base';\nimport { CustomerType } from '../../model/customer-type';\n\nimport {NgbDatepicker, NgbDateAdapter,\n  NgbDateStruct, NgbDateParserFormatter, NgbDatepickerConfig,\n  NgbCalendar} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-populate-cust-info-fields',\n  templateUrl: './populate-cust-info-fields.component.html',\n  styleUrls: ['./populate-cust-info-fields.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopulateCustInfoFieldsComponent implements OnInit{\n  @Input() custInfo: CustInfoBase<any>;\n  @Input() form: FormGroup;\n  @Input() customerType;\n  currentDate: any;\n\n  custType = new CustomerType();\n\n  constructor(\n    private calendar: NgbCalendar,\n    private config: NgbDatepickerConfig\n    ) {\n    \n  }\n\n  get isValid() { return this.form.controls[this.custInfo.key].valid; }\n\n  ngOnInit() {\n\n    this.getValidContractDates();\n\n  }\n  \n  getValidContractDates(){\n    //It is not allowed to set back date for contract expiry date\n    //Current date is set as minimun date\n    this.currentDate = new Date();\n      this.config.minDate = {year:this.currentDate.getFullYear(), \n        month: this.currentDate.getMonth() + 1,\n        day: this.currentDate.getDate()};\n\n  //Calculate max date allowed for contract expiry\n  //Max exp date is plus 2 years from current date in case of small customer(typ=1)\n  //Max exp date is plus 3 years from current date in case of big customer (type=2)  \n  if(this.form.controls['customerType'].value==this.custType.bigCustomerType) {\n        this.config.maxDate = {year:this.currentDate.getFullYear() + 3, \n        month: this.currentDate.getMonth() + 1,\n        day: this.currentDate.getDate()};\n    }else if(this.form.controls['customerType'].value==this.custType.smallCustomerType){\n        this.config.maxDate = {year:this.currentDate.getFullYear() + 2, \n        month: this.currentDate.getMonth() + 1,\n        day: this.currentDate.getDate()};\n    } \n  \n  }\n\n  ngAfterViewInit() {\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/populate-cust-info-fields/populate-cust-info-fields.component.ts","import { CustInfoBase } from './cust-info-base';\n\nexport class TextboxInfo extends CustInfoBase<string>{\n  controlType = 'textbox';\n  type: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.type = options['type'] || '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/textbox-info.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.css\n// module id = ../../../../../src/app/custmgmt/viewcustdetails/viewcustdetails.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container table-responsive\\\">\\n  <h2>Small Customer Details</h2>  \\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Country</th>\\n        <th>Number of Employees</th>\\n        <th>Website</th>\\n        <th>Contract Expiry Date(DD-MM-YYYY)</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody *ngFor=\\\"let customer of smallCustomers\\\">\\n      <tr class=\\\"success\\\">        \\n        <td>{{customer.name}}</td>\\n        <td>{{customer.country}}</td>\\n        <td>{{customer.numberOfEmployees}}</td>\\n        <td>{{customer.websiteUrl}}</td>\\n        <td>{{customer.contractExpiryDate | date:'dd-MM-yyyy'}}</td>\\n        <td><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/editcustomerdetails', customer._id]\\\">Edit</a></td>\\n      </tr>            \\n    </tbody>\\n  </table> \\n\\n  <h2>Big Customer Details</h2>  \\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Country</th>\\n        <th>Number of Employees</th>\\n        <th>Website</th>\\n        <th>Contract Expiry Date(DD-MM-YYYY)</th>\\n        <th>Annual Turnover</th>\\n        <th>Compliance Checked</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody *ngFor=\\\"let customer of bigCustomers\\\">\\n      <tr class=\\\"danger\\\">\\n        <td>{{customer.name}}</td>\\n        <td>{{customer.country}}</td>\\n        <td>{{customer.numberOfEmployees}}</td>\\n        <td>{{customer.websiteUrl}}</td>\\n        <td>{{customer.contractExpiryDate | date: 'dd-MM-yyyy' }}</td>\\n        <td>{{customer.annualTurnover | currency:'EUR'}}</td>\\n        <td *ngIf='customer.complianceChecked'>Yes</td>\\n        <td *ngIf='!customer.complianceChecked'>No</td>\\n        <td><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/editcustomerdetails', customer._id]\\\">Edit</a></td>\\n      </tr>            \\n    </tbody>\\n  </table> \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.html\n// module id = ../../../../../src/app/custmgmt/viewcustdetails/viewcustdetails.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { CustomerType } from '../../model/customer-type';\n\nimport { CustdetailsService } from '../../services/custdetails.service';\nimport { ValidaterulesService } from '../../services/validaterules.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-viewcustdetails',\n  templateUrl: './viewcustdetails.component.html',\n  styleUrls: ['./viewcustdetails.component.css']\n})\nexport class ViewcustdetailsComponent implements OnInit {\n\n  customerDataRes = [];\n  customerType = new CustomerType();\n  smallCustomers = [];\n  bigCustomers = [];\n  \n  constructor(\n    private custdetailsService: CustdetailsService,\n    private validaterulesService: ValidaterulesService\n  ) {\n    \n  }\n\n  ngOnInit() {\n    this.getCustomerDetails();\n  }\n\n  getCustomerDetails(){\n\n    this.custdetailsService.getCustomerData()\n      .subscribe(data => {\n        \n        this.customerDataRes = data;\n        \n        for(let i=0; i<this.customerDataRes.length; i++){\n          this.customerDataRes[i].contractExpiryDate = this.validaterulesService.convertUTCtoDateformat(this.customerDataRes[i].contractExpiryDate);\n        }\n        \n        this.smallCustomers = this.customerDataRes.filter((customerDataRes) => {\n            return customerDataRes.type == this.customerType.smallCustomerType;\n        });\n\n        this.bigCustomers = this.customerDataRes.filter((customerDataRes) => {\n          return customerDataRes.type == this.customerType.bigCustomerType;\n        });\n        \n      }); \n  \n  }\n\n  ngOnDestroy(){\n    this.custdetailsService.getCustomerData().subscribe().unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/custmgmt/viewcustdetails/viewcustdetails.component.ts","export class CustomerType {\n  smallCustomerType: number;\n  bigCustomerType: number;\n  \n  constructor() {\n    this.smallCustomerType = 1;\n    this.bigCustomerType = 2;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/model/customer-type.ts","import { Injectable } from '@angular/core';\n\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { SmallcustDetails } from '../model/custprofile';\n\n//import environment parameters\nimport { environment } from '../../environments/environment';\n\n//classes for dynamic field generation\nimport { CustInfoBase } from '../custmgmt/cust-info-base';\nimport { TextboxInfo } from '../custmgmt/textbox-info';\nimport { DropdownInfo } from '../custmgmt/dropdown-info';\nimport { DatepickerInfo } from '../custmgmt/datepicker-info';\n\n\n@Injectable()\nexport class CustdetailsService {\n\n  private _url = environment.envurl;\n  \n  constructor(\n    private http: Http,\n  ) { }\n\n  getCustomerData(): Observable<SmallcustDetails[]>{\n    return this.http.get(this._url+'getcustomerdetails/customerdetails/')\n      .map(res => {\n        return res.json();\n      });\n  }\n\n  getSelectedCustomerInfo(id){\n    return this.http.get(this._url+'getcustomerdetails/customerdetails/' + id)\n      .map(res => {\n        return res.json()\n      });\n  }\n\n  // TODO: get from a remote source of question metadata\n  // TODO: make asynchronous\n  getCustInfoBase() {\n  let editCustDetailsFields: CustInfoBase<any>[] = [  \n    new TextboxInfo({\n      key: 'name',\n      label: 'Name',\n      value: '',\n      required: true,\n      order: 1\n    }),\n    new DropdownInfo({\n      key: 'country',\n      label: 'Country',\n      options: [\n        {key: 'Denmark',  value: 'Denmark'},\n        {key: 'Sweden',  value: 'Sweden'},\n        {key: 'Norway',   value: 'Norway'},\n      ],\n      custCountrySetValue: '',\n      required: true,\n      order: 2\n    }),\n    new TextboxInfo({\n      key: 'websiteUrl',\n      label: 'Website Url',\n      value: '',\n      order: 3\n    }),\n    new TextboxInfo({\n      key: 'numberOfEmployees',\n      label: 'Number Of Employees',\n      value: '',\n      required: true,\n      order: 4\n    }),\n    new DatepickerInfo({\n      key: 'contractExpiryDate',\n      label: 'Contract Expiry Date',\n      value: '',\n      required: true,\n      order: 6\n    }),\n    new TextboxInfo({\n      key: 'annualTurnover',\n      label: 'Annual Turnover',\n      value: '',\n      required: true,\n      order: 6\n    }),\n    new DropdownInfo({\n      key: 'complianceChecked',\n      label: 'Compliance Checked',\n      options: [\n        {key: 'true', value: 'Yes'},\n        {key: 'false', value: 'No'},\n      ],\n      //custCountrySetValue: '',\n      required: true,\n      order: 7\n    }),\n  ];\n\n    return editCustDetailsFields.sort((a, b) => a.order - b.order);\n  }\n\n  //Function to update customr data\n  updateCustomerDetail(editedCustomerData){\n    let headers = new Headers();\n        headers.append('Content-Type','application/json');\n        return this.http.put(this._url+'getcustomerdetails/customerdetails/'+editedCustomerData._id, JSON.stringify(editedCustomerData),{headers: headers})\n        .map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/custdetails.service.ts","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { CustInfoBase } from '../custmgmt/cust-info-base';\n\n@Injectable()\nexport class EditCustControlService {\n\n  constructor() { }\n\n  toFormGroup(selectedCustDetails: CustInfoBase<any>[], customerDataRes) {\n\n    let group: any = {};\n    selectedCustDetails.forEach(custInfo => {\n      \n      switch(custInfo.key){\n        case 'name':\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.name || '', [Validators.required, Validators.minLength(2), Validators.pattern(/^[a-zA-Z]*$/)])\n        : new FormControl(customerDataRes.name || '');\n        break;\n\n        case 'country':\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.country || '', [Validators.required])\n        : new FormControl(customerDataRes.country || '');\n        break;\n\n        case 'websiteUrl':\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.websiteUrl || '', Validators.required)\n        : new FormControl(customerDataRes.websiteUrl || '');\n        break;\n\n        case 'numberOfEmployees':\n        // group[custInfo.key] = custInfo.required ? new FormControl(custInfo.value || '', [Validators.required, Validators.pattern(/^[1-9][0-9]{0,9}$/)])\n        // : new FormControl(custInfo.value || '');\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.numberOfEmployees || '', [Validators.required, Validators.pattern(/^[1-9][0-9]{0,9}$/)])\n        : new FormControl(customerDataRes.numberOfEmployees || '');\n        break;\n\n        case 'contractExpiryDate':\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.contractExpiryDate, [Validators.required])\n        : new FormControl(customerDataRes.contractExpiryDate || '');\n        break;\n\n        case 'annualTurnover':\n          group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.annualTurnover || '', [Validators.required, Validators.pattern(/^[1-9][0-9]{0,9}$/)])\n        : new FormControl(customerDataRes.annualTurnover || '');\n        break;\n\n        case 'complianceChecked':\n        //console.log(\"Compliance checked:\" + custInfo.key + customerDataRes.complianceChecked);\n        group[custInfo.key] = custInfo.required ? new FormControl(customerDataRes.complianceChecked, [Validators.required])\n        : new FormControl(customerDataRes.complianceChecked || '');\n        break;\n\n        default:\n        group[custInfo.key] = custInfo.required ? new FormControl(custInfo.value || '', Validators.required)\n        : new FormControl(custInfo.value || '');\n      }\n\n    });\n\n    return new FormGroup(group);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/edit-cust-control.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidaterulesService {\n\n  constructor() { }\n\n  convertUTCtoDateformat(contractExpiryDate){\n    \n    //Convert UTC date format to standard date\n    let contractExpDateDisplayFormat = contractExpiryDate.split(\" \");\n      \n    if(contractExpDateDisplayFormat.length > 1){\n      contractExpiryDate = contractExpDateDisplayFormat[0] + contractExpDateDisplayFormat[1];\n    }\n    contractExpDateDisplayFormat = contractExpiryDate.substring(0,10).concat(\" \").concat(contractExpiryDate.substring(11,19));\n    contractExpDateDisplayFormat = new Date(contractExpDateDisplayFormat);\n    \n    return contractExpDateDisplayFormat;\n  }\n\n  //This function is called to convert date back to UTC format for DB storage\n  getContractExpiryDateinUTCFomrt(contractExpiryDate,europeTimeZoneOffset){\n    let contractExpYear = contractExpiryDate.year;\n    let contractExpMonth = contractExpiryDate.month;\n    let contractExpDate = contractExpiryDate.day;\n\n    Date.prototype.toISOString = function() {\n      var tzo = -this.getTimezoneOffset(),\n          dif = tzo >= 0 ? '+' : '-',\n          pad = function(num) {\n              var norm = Math.floor(Math.abs(num));\n              return (norm < 10 ? '0' : '') + norm;\n          };\n      return contractExpYear +\n          '-' + pad(contractExpMonth) +\n          '-' + pad(contractExpDate) +\n          'T' + pad(this.getHours()) +\n          ':' + pad(this.getMinutes()) +\n          ':' + pad(this.getSeconds()) +\n          dif + pad(tzo / 60) +\n          ':' + pad(tzo % 60);\n  };\n  \n    var dt = new Date();\n    //console.log(\"dt:\", dt.toISOString());\n    let revisedContractEndDate = dt.toISOString().substring(0,19).concat(\" \").concat(europeTimeZoneOffset);\n    //console.log(\"revisedContractEndDate:\", revisedContractEndDate);\n    return revisedContractEndDate;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/app/services/validaterules.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  envurl: 'http://localhost:3000/'\n};\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// G:/myProject/nordea-frontend-task/customer-mgmt-frontend/src/main.ts"],"sourceRoot":"webpack:///"}